@use "../abstracts/variables";
@use "../abstracts/mixins";

/*	TRANSPORTER
	Creating Your Web
	www.transporter.at
*/

/*------------------------------------*\
    #GRID
\*------------------------------------*/

//only for debugging purpose
$grid-activated: true;

@mixin grid($grid-columns: variables.$grid-columns, $margin-bottom: 0) {
  //@include clearfix;
  overflow: visible;
  position: relative;
  margin-bottom: $margin-bottom;
  margin-left: 0;
  margin-right: 0;

  display: grid;
  grid-template-columns: repeat(#{$grid-columns}, 1fr);
  grid-template-rows: auto;
  grid-gap: variables.$grid-gutter-small;
  grid-auto-flow: row;

  @media #{variables.$normal-up} {
    grid-gap: variables.$grid-gutter;
  }
}

@mixin grid-item($grid-columns: variables.$grid-columns) {
  transition: all (variables.$transition-duration * 2) ease-in-out;

  grid-column: span $grid-columns;
  width: auto !important;
  margin: 0;

  @include mixins.last-child();
}

@mixin grid-item-generator($query) {
  $i: 1;
  @for $i from 1 through variables.$grid-columns {
    .#{$query}-#{$i} {
      grid-column: span $i;
    }
  }
}

//generate default grid und grid-item
.grid {
  @include grid();
  //grid within grid
  .grid {
  }
}
.grid-item {
  @include grid-item();
}

//generate responsive grid-items
@include grid-item-generator(all);
@media #{variables.$tiny-up} {
  @include grid-item-generator(tiny);
}
@media #{variables.$small-up} {
  @include grid-item-generator(small);
}
@media #{variables.$normal-up} {
  @include grid-item-generator(normal);
}
@media #{variables.$medium-up} {
  @include grid-item-generator(medium);
}
@media #{variables.$large-up} {
  @include grid-item-generator(large);
}
@media #{variables.$xlarge-up} {
  @include grid-item-generator(xlarge);
}
@media #{variables.$xxlarge-up} {
  @include grid-item-generator(xxlarge);
}
@media #{variables.$xxxlarge-up} {
  @include grid-item-generator(xxxlarge);
}
