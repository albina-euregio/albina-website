/*	TRANSPORTER
	Creating Your Web
	www.transporter.at
*/

/*------------------------------------*\
    #MIXINS
\*------------------------------------*/

//math
@function lower-bound($range) {
  @if length($range) <= 0 {
    @return 0;
  }
  @return nth($range, 1);
}
@function upper-bound($range) {
  @if length($range) < 2 {
    @return 999999999999;
  }
  @return nth($range, 2);
}

//animation
@mixin rollout(
  $was: all,
  $transition-duration: $transition-duration,
  $ease: ease-in-out
) {
  transition: $was ($transition-duration) $ease;
}
@mixin rollover(
  $was: all,
  $transition-duration: $transition-duration,
  $ease: ease-out
) {
  transition: $was ($transition-duration / 2) $ease;
}

//position
@mixin fixed() {
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}
@mixin ir() {
  display: block;
  overflow: hidden;
  text-align: left;
  text-indent: -9999px;
  white-space: nowrap;
  background-color: transparent;
  background-repeat: no-repeat;
  border: 0;
}

@mixin hidden() {
  //Completely remove from the flow and screen readers
  display: none !important;
  visibility: hidden !important;
}
@mixin visually-hidden() {
  //Completely remove from the flow but leave available to screen readers
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

//layout
@mixin clearfix() {
  &:after {
    clear: both;
    content: "";
    display: block;
  }
}
@mixin clearfix-undo() {
  &:after {
    display: none;
  }
}
@mixin last-child() {
  > :last-child {
    margin-bottom: 0 !important;
  }
}

@mixin v-padding($mypadding: $padding) {
  padding-top: $mypadding;
  padding-bottom: $mypadding;
}
@mixin h-padding($mypadding: $padding) {
  padding-left: $mypadding;
  padding-right: $mypadding;
}

@mixin text-column($mycolumns: 2) {
  -moz-column-count: $mycolumns;
  -webkit-column-count: $mycolumns;
  column-count: $mycolumns;
  -moz-column-gap: $grid_gutter;
  -webkit-column-gap: $grid_gutter;
  column-gap: $grid_gutter;
}

@mixin smooth-scroll() {
  -webkit-overflow-scrolling: touch;
}

//text color
@mixin text-color($color) {
  color: $color;
  @if $color == $white {
    @include font-smoothing(antialiased);
  }
  p,
  ul,
  ol,
  dl,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    color: $color;
    @if $color == $white {
      @include font-smoothing(antialiased);
    }
  }
}
@mixin headline-color($color) {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    color: $color;
    @if $color == $white {
      @include font-smoothing(antialiased);
    }
  }
}
@mixin link-color($mouseout_farbe, $mouseover_farbe) {
  //a:not(.pure-button, .label) {
  a {
    &:link,
    &:visited {
      color: $mouseout_farbe;
    }
    &:hover,
    &:active {
      color: $mouseover_farbe;
    }
  }
}

//bg, vborder, shadow
@mixin bg-retina(
  $color,
  $file,
  $file-2x,
  $file-2x-width,
  $file-2x-height,
  $repeat,
  $xpos,
  $ypos
) {
  //$color greift nur, wenn kein bild
  //$file ist "pfad zum bild" oder none
  //$file-2x ist "pfad zum @2x-bild" oder $bg-1-image
  //$file-2x-width und $file-2x-height für retina: tatsächliche pixel / 2
  background-color: $color;
  @if $file != none {
    background-image: url($file);
    background-repeat: $repeat;
    background-position: $xpos $ypos;
    @media #{$retina} {
      background-image: url($file-2x);
      background-size: $file-2x-width $file-2x-height; //tatsächliche pixel / 2
    }
  }
}
@mixin box-bg($bg-color: $bg-color) {
  background-color: $bg-color;
}
@mixin box-border($border-color: $border-color) {
  border: $border-width $border-style $border-color;
}
@mixin box-shadow($box-shadow-alpha: 0.05) {
  box-shadow: 0 0 15px 0 rgba($box-shadow-color, $box-shadow-alpha);
}

//font
@mixin font-light {
  font-family: $body-font-family-light;
  font-weight: $body-font-weight-light;
}
@mixin font-normal {
  font-family: $body-font-family;
  font-weight: $body-font-weight;
}
@mixin font-bold {
  font-family: $body-font-family-bold;
  font-weight: $body-font-weight-bold;
}
@mixin font-heavy {
  font-family: $body-font-family-heavy;
  font-weight: $body-font-weight-heavy;
}
@mixin font-header {
  font-family: $header-font-family;
  font-weight: $header-font-weight;
}
@mixin font-italic {
  font-family: $body-font-family-italic;
  //font-weight: $body-font-weight-italic;
  font-style: italic;
}
@mixin font-monospace {
  font-family: $body-font-family-monospace;
  //font-weight: $body-font-weight-monospace;
}

@function font-size($sizeValue: $rem-base) {
  //font-size: $sizeValue + px;
  //font-size: $sizeValue / $rem-base + rem;
  @return ($sizeValue / $rem-base + rem);
}

@mixin letter-spacing($space: 0.05em) {
  letter-spacing: $space;
}
@mixin uppercase($space: 0.1em) {
  text-transform: uppercase;
  @include letter-spacing($space);
}

@mixin font-feature-settings($values) {
  -webkit-font-feature-settings: $values;
  -moz-font-feature-settings: $values;
  -ms-font-feature-settings: $values;
  font-feature-settings: $values;
}
@mixin font-smoothing($value: antialiased) {
  //Values: none, antialiased (default), subpixel-antialiased
  @if $value == antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  } @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

//list
@mixin list-plain {
  list-style-type: none;
  margin-left: $list-side-margin-no-bullet;
  padding: 0;
  > li {
    padding-left: $list-side-padding-no-bullet;
  }
}
@mixin list-inline {
  @include list-plain;
  > li {
    display: inline-block;
    padding: 0 $padding $padding 0;
    line-height: 1em;
    &:last-child {
      padding-right: 0;
    }
  }
  &.list-labels,
  &.blog-list-labels,
  &.list-tags,
  &.list-buttongroup {
    display: flex;
    flex-wrap: wrap;
    .label {
      margin-right: 0;
    }
  }
  &.list-buttongroup-dense {
    display: flex;
    flex-wrap: wrap;
    overflow: hidden;
    > li {
      margin: 0 (-$border-width) (-$border-width) 0;
      padding: 0;
      .js-active {
        z-index: 10;
      }
    }
  }
  .buttongroup-boolean {
    font-size: $tiny-font-size;
    @include font-bold;
  }
}
@mixin list-sidenav {
  @include list-plain;
  > li {
    line-height: 2em;
    border-bottom: $border-width $border-style $border-color;
    &:last-child {
      border: none;
    }
  }
  a {
    display: block;
  }
}
