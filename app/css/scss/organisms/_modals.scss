@use "../abstracts/variables";
@use "../abstracts/mixins";
@use "../atoms/icons";
@use "../atoms/bgs";

/*	TRANSPORTER
	Creating Your Web
	www.transporter.at
*/

/*------------------------------------*\
	#MODAL
\*------------------------------------*/

//http://dimsemenov.com/plugins/magnific-popup

//modal-container
$modal-max-width: 80vw;
$modal-max-width-xlarge: 65vw;
$modal-padding: variables.$padding * 3;
$modal-color: variables.$text-color;
$modal-background-color: variables.$white;
$modal-vertical-margin: 0;

// overlay
$mfp-overlay-color: variables.$primary-color; // Color of overlay screen
$mfp-overlay-opacity: 0.9; // Opacity of overlay screen
$mfp-shadow: none; // Shadow on image or iframe

// spacing
$mfp-popup-padding-left: 0; // Padding from left and from right side
$mfp-popup-padding-left-mobile: 0; // Same as above, but is applied when width of window is less than 800px

$mfp-z-index-base: 9000; //11000;// Base z-index of popup

// controls
$mfp-include-arrows: true; // Include styles for nav arrows
$mfp-controls-opacity: 0.9; // Opacity of controls
$mfp-controls-color: variables.$anchor-font-color; // Color of controls
$mfp-controls-border-color: none; // Border color of controls
$mfp-inner-close-icon-color: variables.$anchor-font-color; // Color of close button when inside
$mfp-controls-text-color: variables.$white; // Color of preloader and "1 of X" indicator
$mfp-controls-text-color-hover: variables.$anchor-font-color; // Hover color of preloader and "1 of X" indicator

// Iframe-type options
$mfp-include-iframe-type: true; // Enable Iframe-type popups
$mfp-iframe-padding-top: $modal-vertical-margin; // Iframe padding top
$mfp-iframe-background: $modal-background-color; //Background color of iframes
$mfp-iframe-max-width: $modal-max-width; //Maximum width of iframes
$mfp-iframe-ratio: 0.75; //Ratio of iframe (9/16 = widescreen, 3/4 = standard, etc.)

// Image-type options
$mfp-include-image-type: true; // Enable Image-type popups
$mfp-image-background: none; //Background color of images
$mfp-image-padding-top: $modal-vertical-margin; //Image padding top
$mfp-image-padding-bottom: $modal-vertical-margin; // Image padding bottom
$mfp-include-mobile-layout-for-image: true; // Removes paddings from top and bottom

// Image caption options
$mfp-caption-title-color: variables.$white; //Caption title color
$mfp-caption-subtitle-color: variables.$white; //Caption subtitle color

// A11y
$mfp-use-visuallyhidden: false; // Hide content from browsers, but make it available for screen readers

// based on https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog#transitioning_dialog_elements
dialog[open] {
  opacity: 1;
  transform: translateY(0) perspective(600px) rotateX(0);
}

dialog {
  border: 0;
  padding: 0;
  opacity: 0;
  transform: translateY(-20px) perspective(600px) rotateX(10deg);
  @include mixins.rollover(all, variables.$transition-duration * 2);
}

@starting-style {
  dialog[open] {
    opacity: 0;
    transform: translateY(-20px) perspective(600px) rotateX(10deg);
  }
}

dialog::backdrop {
  background-color: rgb(0 0 0 / 0);
  @include mixins.rollover(all, variables.$transition-duration * 2);
}

dialog[open]::backdrop {
  background-color: $mfp-overlay-color;
  opacity: $mfp-overlay-opacity;
}

@starting-style {
  dialog[open]::backdrop {
    background-color: rgb(0 0 0 / 0);
  }
}

.mfp-content {
  position: fixed;
  top: 0 !important;
  bottom: 0 !important;
  left: 0 !important;
  right: 0 !important;
  min-height: 100vh;
  margin: 0 !important;
  padding: 0 !important;
  background-color: $modal-background-color;

  overflow-y: auto;
  overflow-x: hidden;

  @include mixins.last-child;

  @media #{variables.$medium-up} {
    position: relative;
    min-height: 0;
    max-width: $modal-max-width;
    margin: auto !important;
    vertical-align: middle;
  }
  @media #{variables.$xlarge-up} {
    max-width: $modal-max-width-xlarge;
  }

  .mfp-close {
    display: none;
  }

  .modal-container + .modal-container {
    border-top: variables.$border-width variables.$border-style
      variables.$brand-very-light;
  }
}

//custom container
.modal-container {
  position: relative;
  min-height: 100vh;
  margin: 0 !important;
  padding: ($modal-padding * 2) $modal-padding $modal-padding $modal-padding;
  @include mixins.last-child;
  @media #{variables.$medium-up} {
    min-height: 0;
    padding: $modal-padding;
  }
  //.tippy-popper { z-index: $mfp-z-index-base + 100; }
}

//close
button.modal-close-btn,
button.mfp-close,
button.mfp-arrow {
  //from alien app.scss
  cursor: pointer;
  z-index: 42;

  @include mixins.ir;
  position: fixed !important;
  top: variables.$padding;
  right: variables.$padding;
  height: calc(#{variables.$icon-font-size} + #{variables.$padding}) !important;
  width: calc(#{variables.$icon-font-size} + #{variables.$padding}) !important;
  margin: 0 !important;
  padding: 0 !important;
  font-size: 1rem;
  color: variables.$brand;
  background-color: rgba(variables.$white, 0.75);
  border-radius: variables.$global-radius !important;
  @include mixins.rollout;

  @include icons.icon(close, "auto", 0, variables.$brand, 0, "none");

  &:before {
    //from alien app.scss
    cursor: pointer;

    position: absolute !important;
    top: 0 !important;
    left: 0 !important;
    margin: 0 !important;
    padding: (variables.$padding * 0.5) !important;
    text-indent: 0 !important;
    @include mixins.rollout;
  }

  &:hover {
    //from alien app.scss
    cursor: pointer;

    color: variables.$brand-dark;
    background-color: variables.$white;
    @include mixins.rollover;
  }

  &:active {
    top: variables.$padding !important;
  }
}

button.mfp-arrow {
  top: calc(50% - #{$modal-padding}) !important;
  height: calc(#{variables.$icon-font-size} + #{variables.$padding}) !important;
  width: calc(#{variables.$icon-font-size} + #{variables.$padding}) !important;
  //font-size: 1rem;
  transform: scale(1) !important;
  @include mixins.rollout;

  &:before {
    border: none !important;
  }

  &:after {
    display: none !important;
  }

  &:active {
    top: calc(50% - #{$modal-padding}) !important;
  }

  &.mfp-arrow-left {
    left: variables.$padding;
    @include icons.icon(arrow-left, 2rem, 0, inherit, 0, "none");

    &:hover {
      cursor: w-resize;
    }
  }

  &.mfp-arrow-right {
    right: variables.$padding;
    @include icons.icon(arrow-right, 2rem, 0, inherit, 0, "none");
    //font-size: 2em;
    &:hover {
      cursor: e-resize;
    }
  }
}

.modal-header {
  padding-bottom: variables.$all-v-padding;

  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p {
    margin-bottom: 0;
  }
}

.modal-follow {
  //text-align: center;
  @include mixins.last-child;

  .list-inline {
    margin-bottom: variables.$margin-bottom * 0.5;
  }
}

.follow-region {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p {
    margin-bottom: 0;
  }

  .sm-buttons {
    margin: variables.$padding 0 (variables.$padding * 2) 0;
  }
}

//weatherstation
.modal-weatherstation {
  .modal-header {
    padding-bottom: variables.$padding;

    .weatherstation-caption {
      margin-bottom: 0;
      font-size: variables.$small-font-size;
    }

    .weatherstation-altitude {
      @include mixins.font-normal;
    }
  }

  ul.weatherstation-flipper {
    //overflow: auto;
    margin-bottom: variables.$padding;
    line-height: 1;
    font-size: variables.$tiny-font-size;
    @include mixins.letter-spacing;

    li {
      padding: 0 (variables.$padding * 2) 0 0;

      &:last-child {
        padding-right: 0;
      }
    }

    a {
      span {
        &:before {
          top: 0.175em;
          line-height: 0;
          @include mixins.rollover;
        }
      }
    }

    .weatherstation-flipper-back {
      span:before {
        transform: translateX(0);
      }

      a {
        &:hover,
        &:active {
          span {
            &:before {
              transform: translateX(-(variables.$padding) * 0.5);
            }
          }
        }
      }
    }

    .weatherstation-flipper-current {
    }

    .weatherstation-flipper-forward {
      span {
        &:before {
          margin-right: 0;
          transform: translateX(0);
        }
      }

      a {
        &:hover,
        &:active {
          span {
            &:before {
              transform: translateX(variables.$padding * 0.5);
            }
          }
        }
      }
    }

    .weatherstation-flipper-station {
      float: right;

      ul {
        margin-bottom: 0;
      }

      a {
        &:hover,
        &:active {
          display: inline-block;
        }
      }
    }
  }

  .weatherstation-info {
    @extend .bg-subtle;
    margin-bottom: variables.$padding;
    padding: variables.$padding;

    li {
      padding-bottom: 0;
    }
  }

  .weatherstation-filter {
    margin-bottom: variables.$margin-bottom;
  }

  .pure-form {
    margin-bottom: 0;

    ul li {
      padding-bottom: 0;
    }
  }

  .weatherstation-img {
    display: block;
    margin: 0 auto variables.$margin-bottom auto;
  }

  .weatherstation-provider {
    margin: 0;
    font-size: variables.$small-font-size;
  }

  .uplots {
    display: flex;
    flex-direction: column;
    gap: 40px;
    margin-top: 20px;
    margin-bottom: 20px;
  }

  .uplot {
    box-shadow: 0 0 2px 2px variables.$grey-very-light;
  }
}
