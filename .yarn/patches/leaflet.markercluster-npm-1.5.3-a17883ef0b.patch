diff --git a/dist/leaflet.markercluster-src.js b/dist/leaflet.markercluster-src.js
index 93a5b9088c9ddcd98f82712d7cfa56f58f5fd641..7275d974e423c104ab7077ddd326722d8ba5da89 100755
--- a/dist/leaflet.markercluster-src.js
+++ b/dist/leaflet.markercluster-src.js
@@ -204,7 +204,7 @@
 
 		//Takes an array of markers and adds them in bulk
 		addLayers: function (layersArray, skipLayerAddEvent) {
-			if (!L.Util.isArray(layersArray)) {
+			if (!Array.isArray(layersArray)) {
 				return this.addLayer(layersArray);
 			}
 
@@ -220,7 +220,7 @@
 
 			if (this._map) {
 				var started = (new Date()).getTime();
-				var process = L.bind(function () {
+				var process = function () {
 					var start = (new Date()).getTime();
 
 					// Make sure to unspiderfy before starting to add some layers
@@ -300,9 +300,9 @@
 					} else {
 						setTimeout(process, this.options.chunkDelay);
 					}
-				}, this);
+				}
 
-				process();
+				process.apply(this);
 			} else {
 				var needsClustering = this._needsClustering;
 
@@ -1070,7 +1070,7 @@
 		_enqueue: function (fn) {
 			this._queue.push(fn);
 			if (!this._queueTimeout) {
-				this._queueTimeout = setTimeout(L.bind(this._processQueue, this), 300);
+				this._queueTimeout = setTimeout(this._processQueue.bind(this), 300);
 			}
 		},
 		_processQueue: function () {
@@ -2554,7 +2554,7 @@
 
 		_unspiderfyZoomAnim: function (zoomDetails) {
 			//Wait until the first zoomanim after the user has finished touch-zooming before running the animation
-			if (L.DomUtil.hasClass(this._map._mapPane, 'leaflet-touching')) {
+			if (this._map._mapPane.classList.contains('leaflet-touching')) {
 				return;
 			}
 
