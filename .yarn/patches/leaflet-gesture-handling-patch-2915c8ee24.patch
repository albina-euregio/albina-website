diff --git a/dist/leaflet-gesture-handling.js b/dist/leaflet-gesture-handling.js
index 302c17e28b081e6087016ba8c71677bde6f66b9f..c1f0ece1801386b5b1042d0cdad611c0ebf178d1 100644
--- a/dist/leaflet-gesture-handling.js
+++ b/dist/leaflet-gesture-handling.js
@@ -45,7 +45,7 @@
         de: {
             touch: "Verschieben der Karte mit zwei Fingern",
             scroll: "Verwende Strg+Scrollen zum Zoomen der Karte",
-            scrollMac: "\u2318"
+            scrollMac: "Verwende \u2318 + Scrollen zum Zoomen der Karte"
         },
         //Greek
         el: {
@@ -356,13 +356,13 @@
             this._map._container.addEventListener("click", this._handleTouch);
 
             L.DomEvent.on(this._map._container, "wheel", this._handleScroll, this);
-            L.DomEvent.on(this._map, "mouseover", this._handleMouseOver, this);
-            L.DomEvent.on(this._map, "mouseout", this._handleMouseOut, this);
+            this._map.on("pointerover", this._handleMouseOver, this);
+            this._map.on("pointerout", this._handleMouseOut, this);
 
             // Listen to these events so will not disable dragging if the user moves the mouse out the boundary of the map container whilst actively dragging the map.
-            L.DomEvent.on(this._map, "movestart", this._handleDragging, this);
-            L.DomEvent.on(this._map, "move", this._handleDragging, this);
-            L.DomEvent.on(this._map, "moveend", this._handleDragging, this);
+            this._map.on("movestart", this._handleDragging, this);
+            this._map.on("move", this._handleDragging, this);
+            this._map.on("moveend", this._handleDragging, this);
         },
 
         removeHooks: function () {
@@ -375,12 +375,12 @@
             this._map._container.removeEventListener("click", this._handleTouch);
 
             L.DomEvent.off(this._map._container, "wheel", this._handleScroll, this);
-            L.DomEvent.off(this._map, "mouseover", this._handleMouseOver, this);
-            L.DomEvent.off(this._map, "mouseout", this._handleMouseOut, this);
+            this._map.off("pointerover", this._handleMouseOver, this);
+            this._map.off("pointerout", this._handleMouseOut, this);
 
-            L.DomEvent.off(this._map, "movestart", this._handleDragging, this);
-            L.DomEvent.off(this._map, "move", this._handleDragging, this);
-            L.DomEvent.off(this._map, "moveend", this._handleDragging, this);
+            this._map.off("movestart", this._handleDragging, this);
+            this._map.off("move", this._handleDragging, this);
+            this._map.off("moveend", this._handleDragging, this);
         },
 
         _handleDragging: function (e) {
