diff --git a/dist/leaflet-gesture-handling.js b/dist/leaflet-gesture-handling.js
index 302c17e28b081e6087016ba8c71677bde6f66b9f..f227a8bf2ee0c59aa3979a103559c6d78883952b 100644
--- a/dist/leaflet-gesture-handling.js
+++ b/dist/leaflet-gesture-handling.js
@@ -356,13 +356,13 @@
             this._map._container.addEventListener("click", this._handleTouch);
 
             L.DomEvent.on(this._map._container, "wheel", this._handleScroll, this);
-            L.DomEvent.on(this._map, "mouseover", this._handleMouseOver, this);
-            L.DomEvent.on(this._map, "mouseout", this._handleMouseOut, this);
+            this._map.on("mouseover", this._handleMouseOver, this);
+            this._map.on("mouseout", this._handleMouseOut, this);
 
             // Listen to these events so will not disable dragging if the user moves the mouse out the boundary of the map container whilst actively dragging the map.
-            L.DomEvent.on(this._map, "movestart", this._handleDragging, this);
-            L.DomEvent.on(this._map, "move", this._handleDragging, this);
-            L.DomEvent.on(this._map, "moveend", this._handleDragging, this);
+            this._map.on("movestart", this._handleDragging, this);
+            this._map.on("move", this._handleDragging, this);
+            this._map.on("moveend", this._handleDragging, this);
         },
 
         removeHooks: function () {
@@ -375,12 +375,12 @@
             this._map._container.removeEventListener("click", this._handleTouch);
 
             L.DomEvent.off(this._map._container, "wheel", this._handleScroll, this);
-            L.DomEvent.off(this._map, "mouseover", this._handleMouseOver, this);
-            L.DomEvent.off(this._map, "mouseout", this._handleMouseOut, this);
+            this._map.off("mouseover", this._handleMouseOver, this);
+            this._map.off("mouseout", this._handleMouseOut, this);
 
-            L.DomEvent.off(this._map, "movestart", this._handleDragging, this);
-            L.DomEvent.off(this._map, "move", this._handleDragging, this);
-            L.DomEvent.off(this._map, "moveend", this._handleDragging, this);
+            this._map.off("movestart", this._handleDragging, this);
+            this._map.off("move", this._handleDragging, this);
+            this._map.off("moveend", this._handleDragging, this);
         },
 
         _handleDragging: function (e) {
